#pragma once
#include <windows.h>

extern HDC hdc;

namespace Image {
	void standrardGlassShow(HDC hdc, int x, int y) {
		int glassMatrixR[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 68, 129, 129, 129, 129, 68, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 68, 129, 129, 129, 129, 68, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 59, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 59, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 59, 59, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 59, 59, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 59, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 68, 68, 129, 59, 59, 59, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 68, 68, 68, 129, 129, 129, 59, 59, 59, 59, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 68, 68, 68, 129, 129, 129, 129, 129, 59, 59, 59, 59, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 68, 68, 68, 129, 129, 129, 129, 68, 68, 68, 68, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 129, 129, 68, 68, 68, 68, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 129, 68, 68, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 68, 68, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 0, 221, 0, 221, 221, 221, 221, 0, 221, 0, 232, 232, 0, 232, 0, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 0, 232, 221, 221, 221, 221, 0, 221, 0, 221, 221, 0, 221, 0, 221, 221, 221, 232, 0, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 221, 0, 221, 0, 221, 221, 221, 221, 0, 0, 221, 232, 232, 0, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 232, 0, 221, 221, 221, 0, 221, 0, 221, 221, 221, 0, 0, 0, 221, 221, 221, 232, 0, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 232, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 129, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 129, 129, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 11, 129, 129, 129, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 11, 11, 129, 129, 129, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 11, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 11, 11, 11, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 11, 11, 11, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, },
		};
		int glassMatrixG[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 179, 179, 179, 179, 194, 194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 179, 179, 179, 179, 194, 194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 128, 74, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 128, 74, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 128, 128, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 128, 128, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 194, 179, 128, 128, 128, 74, 74, 74, 74, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 194, 179, 179, 179, 128, 128, 128, 128, 74, 74, 74, 74, 74, 74, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 194, 194, 194, 179, 179, 179, 179, 179, 128, 128, 128, 128, 74, 74, 74, 74, 74, 74, 74, 74, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 194, 194, 194, 179, 179, 179, 179, 194, 194, 194, 194, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 179, 179, 194, 194, 194, 194, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 179, 194, 194, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 194, 194, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 0, 173, 0, 173, 173, 173, 173, 0, 173, 0, 183, 183, 0, 183, 0, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 0, 183, 173, 173, 173, 173, 0, 173, 0, 173, 173, 0, 173, 0, 173, 173, 173, 183, 0, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 173, 0, 173, 0, 173, 173, 173, 173, 0, 0, 173, 183, 183, 0, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 183, 0, 173, 173, 173, 0, 173, 0, 173, 173, 173, 0, 0, 0, 173, 173, 173, 183, 0, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 183, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 179, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 179, 179, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 74, 179, 179, 179, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 74, 74, 179, 179, 179, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 74, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 74, 74, 74, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 74, 74, 74, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 74, 74, 74, 74, 74, 0, 0, 0, 0, 0, 0, },
		};
		int glassMatrixB[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 99, 142, 142, 142, 142, 99, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 99, 142, 142, 142, 142, 99, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 78, 29, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 78, 29, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 78, 78, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 78, 78, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 78, 78, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 99, 99, 142, 78, 78, 78, 29, 29, 29, 29, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 99, 99, 99, 142, 142, 142, 78, 78, 78, 78, 29, 29, 29, 29, 29, 29, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 99, 99, 99, 142, 142, 142, 142, 142, 78, 78, 78, 78, 29, 29, 29, 29, 29, 29, 29, 29, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 99, 99, 99, 142, 142, 142, 142, 99, 99, 99, 99, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 142, 142, 99, 99, 99, 99, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 142, 99, 99, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 99, 99, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 0, 143, 0, 143, 143, 143, 143, 0, 143, 0, 150, 150, 0, 150, 0, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 0, 150, 143, 143, 143, 143, 0, 143, 0, 143, 143, 0, 143, 0, 143, 143, 143, 150, 0, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 143, 0, 143, 0, 143, 143, 143, 143, 0, 0, 143, 150, 150, 0, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 150, 0, 143, 143, 143, 0, 143, 0, 143, 143, 143, 0, 0, 0, 143, 143, 143, 150, 0, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 150, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 142, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 142, 142, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 29, 142, 142, 142, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 29, 29, 142, 142, 142, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 29, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 29, 29, 29, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 29, 29, 29, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 29, 29, 29, 29, 29, 0, 0, 0, 0, 0, 0, },
		};
		for (int i = 0; i < 32; i++) {
			for (int j = 0; j < 32; j++) {
				if ((glassMatrixR[i][j] != 0) && (glassMatrixG[i][j] != 0) && (glassMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(glassMatrixR[i][j], glassMatrixG[i][j], glassMatrixB[i][j]));
				}
			}
		}
	}
	void standrardGlassHide(HDC hdc, int x, int y) {
		int glassMatrixR[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 68, 129, 129, 129, 129, 68, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 68, 129, 129, 129, 129, 68, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 59, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 59, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 59, 59, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 59, 59, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 59, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 68, 68, 68, 129, 59, 59, 59, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 68, 68, 68, 129, 129, 129, 59, 59, 59, 59, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 68, 68, 68, 129, 129, 129, 129, 129, 59, 59, 59, 59, 11, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 68, 68, 68, 129, 129, 129, 129, 68, 68, 68, 68, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 129, 129, 68, 68, 68, 68, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 129, 68, 68, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 68, 68, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 0, 221, 0, 221, 221, 221, 221, 0, 221, 0, 232, 232, 0, 232, 0, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 0, 232, 221, 221, 221, 221, 0, 221, 0, 221, 221, 0, 221, 0, 221, 221, 221, 232, 0, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 221, 0, 221, 0, 221, 221, 221, 221, 0, 0, 221, 232, 232, 0, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 232, 0, 221, 221, 221, 0, 221, 0, 221, 221, 221, 0, 0, 0, 221, 221, 221, 232, 0, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 232, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 129, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 129, 129, 129, 129, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 11, 129, 129, 129, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 11, 11, 129, 129, 129, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 11, 11, 11, 11, 11, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 11, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 11, 11, 11, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 11, 11, 11, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 11, 11, 11, 11, 11, 0, 0, 0, 0, 0, 0, },
		};
		int glassMatrixG[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 179, 179, 179, 179, 194, 194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 179, 179, 179, 179, 194, 194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 128, 74, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 128, 74, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 128, 128, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 128, 128, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 194, 179, 128, 128, 128, 74, 74, 74, 74, 74, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 194, 194, 194, 179, 179, 179, 128, 128, 128, 128, 74, 74, 74, 74, 74, 74, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 194, 194, 194, 179, 179, 179, 179, 179, 128, 128, 128, 128, 74, 74, 74, 74, 74, 74, 74, 74, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 194, 194, 194, 179, 179, 179, 179, 194, 194, 194, 194, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 179, 179, 194, 194, 194, 194, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 179, 194, 194, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 194, 194, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 0, 173, 0, 173, 173, 173, 173, 0, 173, 0, 183, 183, 0, 183, 0, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 0, 183, 173, 173, 173, 173, 0, 173, 0, 173, 173, 0, 173, 0, 173, 173, 173, 183, 0, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 173, 0, 173, 0, 173, 173, 173, 173, 0, 0, 173, 183, 183, 0, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 183, 0, 173, 173, 173, 0, 173, 0, 173, 173, 173, 0, 0, 0, 173, 173, 173, 183, 0, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 183, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 179, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 179, 179, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 74, 179, 179, 179, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 74, 74, 179, 179, 179, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 74, 74, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 74, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 74, 74, 74, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 74, 74, 74, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 74, 74, 74, 74, 74, 0, 0, 0, 0, 0, 0, },
		};
		int glassMatrixB[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 99, 142, 142, 142, 142, 99, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 99, 142, 142, 142, 142, 99, 99, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 78, 29, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 78, 29, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 78, 78, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 78, 78, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 78, 78, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 99, 99, 99, 142, 78, 78, 78, 29, 29, 29, 29, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 99, 99, 99, 142, 142, 142, 78, 78, 78, 78, 29, 29, 29, 29, 29, 29, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 99, 99, 99, 142, 142, 142, 142, 142, 78, 78, 78, 78, 29, 29, 29, 29, 29, 29, 29, 29, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 99, 99, 99, 142, 142, 142, 142, 99, 99, 99, 99, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 142, 142, 99, 99, 99, 99, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 142, 99, 99, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 99, 99, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 0, 143, 0, 143, 143, 143, 143, 0, 143, 0, 150, 150, 0, 150, 0, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 0, 150, 143, 143, 143, 143, 0, 143, 0, 143, 143, 0, 143, 0, 143, 143, 143, 150, 0, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 143, 0, 143, 0, 143, 143, 143, 143, 0, 0, 143, 150, 150, 0, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 150, 0, 143, 143, 143, 0, 143, 0, 143, 143, 143, 0, 0, 0, 143, 143, 143, 150, 0, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 150, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 142, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 142, 142, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 29, 142, 142, 142, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 29, 29, 142, 142, 142, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 29, 29, 29, 29, 29, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 29, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 29, 29, 29, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 29, 29, 29, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 29, 29, 29, 29, 29, 0, 0, 0, 0, 0, 0, },
		};
		for (int i = 0; i < 32; i++) {
			for (int j = 0; j < 32; j++) {
				if ((glassMatrixR[i][j] != 0) && (glassMatrixG[i][j] != 0) && (glassMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(12, 13, 13));
				}
			}
		}
	}
	void magicGlassShow(HDC hdc, int x, int y) {
		int magicGlassMatrixR[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 105, 173, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 105, 148, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 148, 148, 173, 105, 105, 0, 0, 0, 255, 255, 173, 173, 173, 173, 255, 255, 0, 0, 0, 0, 173, 173, 148, 105, 105, 0, 0, 0, },
			{0, 0, 0, 105, 105, 173, 148, 148, 0, 0, 0, 0, 255, 255, 173, 173, 173, 173, 255, 255, 0, 0, 0, 105, 105, 148, 173, 173, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 173, 105, 0, 0, 0, 0, 0, 0, 0, 255, 148, 105, 105, 0, 0, 0, 0, 0, 0, 0, 148, 105, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 255, 148, 105, 105, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 148, 148, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 148, 148, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 148, 148, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 173, 148, 148, 148, 105, 105, 105, 105, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 173, 173, 173, 148, 148, 148, 148, 105, 105, 105, 105, 105, 105, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 255, 255, 255, 173, 173, 173, 173, 173, 148, 148, 148, 148, 105, 105, 105, 105, 105, 105, 105, 105, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 255, 255, 255, 173, 173, 173, 173, 255, 255, 255, 255, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 173, 255, 255, 255, 255, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 255, 255, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 255, 255, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 0, 0, 0, 0, },
			{0, 0, 0, 0, 221, 221, 221, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 0, 221, 221, 0, 221, 221, 0, 221, 0, 221, 221, 221, 0, 0, 232, 221, 221, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 221, 0, 221, 221, 221, 221, 0, 221, 0, 221, 221, 221, 0, 221, 0, 221, 221, 232, 0, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 232, 0, 221, 221, 221, 221, 0, 0, 0, 221, 221, 0, 221, 221, 0, 221, 221, 221, 0, 0, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 221, 232, 0, 232, 0, 221, 221, 0, 221, 221, 0, 221, 221, 221, 0, 0, 221, 221, 221, 0, 232, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 221, 221, 221, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 221, 221, 0, 0, 0, 0, },
			{0, 0, 0, 0, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 173, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 105, 173, 173, 173, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 105, 105, 173, 173, 173, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 105, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 105, 105, 105, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 105, 105, 105, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 105, 105, 105, 105, 105, 0, 0, 0, 0, 0, 0, },
		};
		int magicGlassMatrixG[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 98, 166, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 98, 142, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 166, 98, 98, 0, 0, 0, 242, 242, 166, 166, 166, 166, 242, 242, 0, 0, 0, 0, 166, 166, 142, 98, 98, 0, 0, 0, },
			{0, 0, 0, 98, 98, 166, 142, 142, 0, 0, 0, 0, 242, 242, 166, 166, 166, 166, 242, 242, 0, 0, 0, 98, 98, 142, 166, 166, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 166, 98, 0, 0, 0, 0, 0, 0, 0, 242, 142, 98, 98, 0, 0, 0, 0, 0, 0, 0, 142, 98, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 0, 242, 142, 98, 98, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 242, 142, 142, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 242, 142, 142, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 142, 142, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 242, 242, 242, 166, 142, 142, 142, 98, 98, 98, 98, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 242, 242, 242, 166, 166, 166, 142, 142, 142, 142, 98, 98, 98, 98, 98, 98, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 242, 242, 242, 166, 166, 166, 166, 166, 142, 142, 142, 142, 98, 98, 98, 98, 98, 98, 98, 98, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 242, 242, 242, 166, 166, 166, 166, 242, 242, 242, 242, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 166, 242, 242, 242, 242, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 242, 242, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 242, 242, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 0, 173, 173, 0, 173, 173, 0, 173, 0, 173, 173, 173, 0, 0, 183, 173, 173, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 173, 0, 173, 173, 173, 173, 0, 173, 0, 173, 173, 173, 0, 173, 0, 173, 173, 183, 0, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 183, 0, 173, 173, 173, 173, 0, 0, 0, 173, 173, 0, 173, 173, 0, 173, 173, 173, 0, 0, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 183, 0, 183, 0, 173, 173, 0, 173, 173, 0, 173, 173, 173, 0, 0, 173, 173, 173, 0, 183, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 173, 173, 0, 0, 0, 0, },
			{0, 0, 0, 0, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 166, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 98, 166, 166, 166, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 98, 98, 166, 166, 166, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 98, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 98, 98, 98, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 98, 98, 98, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 98, 98, 98, 98, 98, 0, 0, 0, 0, 0, 0, },
		};
		int magicGlassMatrixB[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 22, 100, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 22, 59, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 59, 59, 100, 22, 22, 0, 0, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 0, 0, 0, 100, 100, 59, 22, 22, 0, 0, 0, },
			{0, 0, 0, 22, 22, 100, 59, 59, 0, 0, 0, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 0, 0, 22, 22, 59, 100, 100, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 100, 22, 0, 0, 0, 0, 0, 0, 0, 0, 59, 22, 22, 0, 0, 0, 0, 0, 0, 0, 59, 22, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 59, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 59, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 59, 59, 59, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 59, 59, 59, 59, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 100, 100, 59, 59, 59, 59, 22, 22, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 0, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 0, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 100, 0, 0, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 0, 0, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 0, 0, 0, 0, },
			{0, 0, 0, 0, 143, 143, 143, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 0, 143, 143, 0, 143, 143, 0, 143, 0, 143, 143, 143, 0, 0, 150, 143, 143, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 143, 0, 143, 143, 143, 143, 0, 143, 0, 143, 143, 143, 0, 143, 0, 143, 143, 150, 0, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 150, 0, 143, 143, 143, 143, 0, 0, 0, 143, 143, 0, 143, 143, 0, 143, 143, 143, 0, 0, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 143, 150, 0, 150, 0, 143, 143, 0, 143, 143, 0, 143, 143, 143, 0, 0, 143, 143, 143, 0, 150, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 143, 143, 143, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 143, 143, 0, 0, 0, 0, },
			{0, 0, 0, 0, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 100, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 100, 100, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 22, 100, 100, 100, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 22, 22, 100, 100, 100, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 22, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 22, 22, 22, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 22, 22, 22, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, },
		};
		for (int i = 0; i < 32; i++) {
			for (int j = 0; j < 32; j++) {
				if ((magicGlassMatrixR[i][j] != 0) && (magicGlassMatrixG[i][j] != 0) && (magicGlassMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(magicGlassMatrixR[i][j], magicGlassMatrixG[i][j], magicGlassMatrixB[i][j]));
				}
			}
		}
	}
	void magicGlassHide(HDC hdc, int x, int y) {
		int magicGlassMatrixR[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 105, 173, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 105, 148, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 148, 148, 173, 105, 105, 0, 0, 0, 255, 255, 173, 173, 173, 173, 255, 255, 0, 0, 0, 0, 173, 173, 148, 105, 105, 0, 0, 0, },
			{0, 0, 0, 105, 105, 173, 148, 148, 0, 0, 0, 0, 255, 255, 173, 173, 173, 173, 255, 255, 0, 0, 0, 105, 105, 148, 173, 173, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 173, 105, 0, 0, 0, 0, 0, 0, 0, 255, 148, 105, 105, 0, 0, 0, 0, 0, 0, 0, 148, 105, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 0, 255, 148, 105, 105, 0, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 148, 148, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 148, 148, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 148, 148, 148, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 173, 148, 148, 148, 105, 105, 105, 105, 105, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 173, 173, 173, 148, 148, 148, 148, 105, 105, 105, 105, 105, 105, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 255, 255, 255, 173, 173, 173, 173, 173, 148, 148, 148, 148, 105, 105, 105, 105, 105, 105, 105, 105, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 255, 255, 255, 173, 173, 173, 173, 255, 255, 255, 255, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 173, 255, 255, 255, 255, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 255, 255, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 255, 255, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 0, 0, 0, 0, },
			{0, 0, 0, 0, 221, 221, 221, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 0, 221, 221, 0, 221, 221, 0, 221, 0, 221, 221, 221, 0, 0, 232, 221, 221, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 221, 0, 221, 221, 221, 221, 0, 221, 0, 221, 221, 221, 0, 221, 0, 221, 221, 232, 0, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 232, 0, 221, 221, 221, 221, 0, 0, 0, 221, 221, 0, 221, 221, 0, 221, 221, 221, 0, 0, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 221, 232, 0, 232, 0, 221, 221, 0, 221, 221, 0, 221, 221, 221, 0, 0, 221, 221, 221, 0, 232, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 221, 221, 221, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 221, 221, 0, 0, 0, 0, },
			{0, 0, 0, 0, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 173, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 105, 173, 173, 173, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 105, 105, 173, 173, 173, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 148, 105, 105, 105, 105, 105, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 105, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 105, 105, 105, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 105, 105, 105, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 105, 105, 105, 105, 105, 0, 0, 0, 0, 0, 0, },
		};
		int magicGlassMatrixG[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 98, 166, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 98, 142, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 142, 142, 166, 98, 98, 0, 0, 0, 242, 242, 166, 166, 166, 166, 242, 242, 0, 0, 0, 0, 166, 166, 142, 98, 98, 0, 0, 0, },
			{0, 0, 0, 98, 98, 166, 142, 142, 0, 0, 0, 0, 242, 242, 166, 166, 166, 166, 242, 242, 0, 0, 0, 98, 98, 142, 166, 166, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 166, 98, 0, 0, 0, 0, 0, 0, 0, 242, 142, 98, 98, 0, 0, 0, 0, 0, 0, 0, 142, 98, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 0, 242, 142, 98, 98, 0, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 242, 142, 142, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 242, 142, 142, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 142, 142, 142, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 242, 242, 242, 166, 142, 142, 142, 98, 98, 98, 98, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 242, 242, 242, 166, 166, 166, 142, 142, 142, 142, 98, 98, 98, 98, 98, 98, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 242, 242, 242, 166, 166, 166, 166, 166, 142, 142, 142, 142, 98, 98, 98, 98, 98, 98, 98, 98, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 242, 242, 242, 166, 166, 166, 166, 242, 242, 242, 242, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 166, 242, 242, 242, 242, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 242, 242, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 242, 242, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 0, 173, 173, 0, 173, 173, 0, 173, 0, 173, 173, 173, 0, 0, 183, 173, 173, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 173, 0, 173, 173, 173, 173, 0, 173, 0, 173, 173, 173, 0, 173, 0, 173, 173, 183, 0, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 183, 0, 173, 173, 173, 173, 0, 0, 0, 173, 173, 0, 173, 173, 0, 173, 173, 173, 0, 0, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 183, 0, 183, 0, 173, 173, 0, 173, 173, 0, 173, 173, 173, 0, 0, 173, 173, 173, 0, 183, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 173, 173, 173, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 173, 173, 0, 0, 0, 0, },
			{0, 0, 0, 0, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 166, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 98, 166, 166, 166, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 98, 98, 166, 166, 166, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 98, 98, 98, 98, 98, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 98, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 98, 98, 98, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 98, 98, 98, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 98, 98, 98, 98, 98, 0, 0, 0, 0, 0, 0, },
		};
		int magicGlassMatrixB[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 22, 100, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 22, 59, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 59, 59, 100, 22, 22, 0, 0, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 0, 0, 0, 100, 100, 59, 22, 22, 0, 0, 0, },
			{0, 0, 0, 22, 22, 100, 59, 59, 0, 0, 0, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 0, 0, 22, 22, 59, 100, 100, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 100, 22, 0, 0, 0, 0, 0, 0, 0, 0, 59, 22, 22, 0, 0, 0, 0, 0, 0, 0, 59, 22, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 59, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 59, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 59, 59, 59, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 59, 59, 59, 59, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 100, 100, 59, 59, 59, 59, 22, 22, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 0, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 100, 100, 0, 0, 0, 0, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 100, 0, 0, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 0, 0, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 0, 0, 0, 0, },
			{0, 0, 0, 0, 143, 143, 143, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 0, 143, 143, 0, 143, 143, 0, 143, 0, 143, 143, 143, 0, 0, 150, 143, 143, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 143, 0, 143, 143, 143, 143, 0, 143, 0, 143, 143, 143, 0, 143, 0, 143, 143, 150, 0, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 150, 0, 143, 143, 143, 143, 0, 0, 0, 143, 143, 0, 143, 143, 0, 143, 143, 143, 0, 0, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 143, 150, 0, 150, 0, 143, 143, 0, 143, 143, 0, 143, 143, 143, 0, 0, 143, 143, 143, 0, 150, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 143, 143, 143, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 143, 143, 0, 0, 0, 0, },
			{0, 0, 0, 0, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 100, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 100, 100, 100, 100, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 22, 100, 100, 100, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 22, 22, 100, 100, 100, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 59, 22, 22, 22, 22, 22, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 22, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 22, 22, 22, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 22, 22, 22, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 22, 22, 22, 22, 22, 0, 0, 0, 0, 0, 0, },
		};
		for (int i = 0; i < 32; i++) {
			for (int j = 0; j < 32; j++) {
				if ((magicGlassMatrixR[i][j] != 0) && (magicGlassMatrixG[i][j] != 0) && (magicGlassMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(12, 13, 13));
				}
			}
		}
	}
	void poisonGlassShow(HDC hdc, int x, int y) {
		int poisonGlassMatrixR[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 82, 111, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 82, 111, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 107, 107, 111, 82, 82, 0, 0, 0, 111, 111, 166, 166, 166, 166, 111, 111, 0, 0, 0, 0, 107, 107, 111, 82, 82, 0, 0, 0, },
			{0, 0, 0, 82, 82, 111, 107, 107, 0, 0, 0, 0, 111, 111, 166, 166, 166, 166, 111, 111, 0, 0, 0, 82, 82, 111, 107, 107, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 111, 82, 0, 0, 0, 0, 0, 0, 0, 111, 107, 82, 82, 0, 0, 0, 0, 0, 0, 0, 111, 82, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 111, 107, 82, 82, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 107, 107, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 107, 107, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 107, 107, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 111, 111, 166, 107, 107, 107, 82, 82, 82, 82, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 111, 111, 111, 166, 166, 166, 107, 107, 107, 107, 82, 82, 82, 82, 82, 82, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 111, 111, 111, 166, 166, 166, 166, 166, 107, 107, 107, 107, 82, 82, 82, 82, 82, 82, 82, 82, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 111, 111, 111, 166, 166, 166, 166, 111, 111, 111, 111, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 166, 111, 111, 111, 111, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 111, 111, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 111, 111, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 232, 0, 232, 232, 221, 221, 221, 0, 221, 221, 221, 0, 221, 221, 0, 232, 232, 0, 232, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 221, 0, 221, 0, 221, 221, 0, 221, 0, 232, 232, 232, 232, 0, 0, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 0, 221, 0, 0, 221, 221, 221, 0, 221, 0, 232, 232, 232, 0, 0, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 232, 0, 232, 232, 232, 221, 0, 221, 0, 221, 221, 0, 0, 221, 0, 232, 232, 0, 232, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 232, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 166, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 82, 166, 166, 166, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 82, 82, 166, 166, 166, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 82, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 82, 82, 82, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 82, 82, 82, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 82, 82, 82, 82, 82, 0, 0, 0, 0, 0, 0, },
		};
		int poisonGlassMatrixG[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 25, 49, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 25, 49, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 49, 25, 25, 0, 0, 0, 49, 49, 115, 115, 115, 115, 49, 49, 0, 0, 0, 0, 0, 0, 49, 25, 25, 0, 0, 0, },
			{0, 0, 0, 25, 25, 49, 0, 0, 0, 0, 0, 0, 49, 49, 115, 115, 115, 115, 49, 49, 0, 0, 0, 25, 25, 49, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 49, 25, 0, 0, 0, 0, 0, 0, 0, 49, 0, 25, 25, 0, 0, 0, 0, 0, 0, 0, 49, 25, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 49, 0, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 49, 49, 115, 0, 0, 0, 25, 25, 25, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 49, 49, 49, 115, 115, 115, 0, 0, 0, 0, 25, 25, 25, 25, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 49, 49, 49, 115, 115, 115, 115, 115, 0, 0, 0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 49, 49, 49, 115, 115, 115, 115, 49, 49, 49, 49, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 115, 115, 49, 49, 49, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 115, 49, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 49, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 183, 0, 183, 183, 173, 173, 173, 0, 173, 173, 173, 0, 173, 173, 0, 183, 183, 0, 183, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 173, 0, 173, 0, 173, 173, 0, 173, 0, 183, 183, 183, 183, 0, 0, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 0, 173, 0, 0, 173, 173, 173, 0, 173, 0, 183, 183, 183, 0, 0, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 183, 0, 183, 183, 183, 173, 0, 173, 0, 173, 173, 0, 0, 173, 0, 183, 183, 0, 183, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 183, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 25, 115, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 25, 25, 115, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 25, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 25, 25, 25, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 25, 25, 25, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 25, 25, 25, 25, 25, 0, 0, 0, 0, 0, 0, },
		};
		int poisonGlassMatrixB[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 120, 152, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 120, 152, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 152, 120, 120, 0, 0, 0, 152, 152, 199, 199, 199, 199, 152, 152, 0, 0, 0, 0, 179, 179, 152, 120, 120, 0, 0, 0, },
			{0, 0, 0, 120, 120, 152, 179, 179, 0, 0, 0, 0, 152, 152, 199, 199, 199, 199, 152, 152, 0, 0, 0, 120, 120, 152, 179, 179, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 152, 120, 0, 0, 0, 0, 0, 0, 0, 152, 179, 120, 120, 0, 0, 0, 0, 0, 0, 0, 152, 120, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 152, 179, 120, 120, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 179, 179, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 179, 179, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 179, 179, 179, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 152, 152, 199, 179, 179, 179, 120, 120, 120, 120, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 152, 152, 152, 199, 199, 199, 179, 179, 179, 179, 120, 120, 120, 120, 120, 120, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 152, 152, 152, 199, 199, 199, 199, 199, 179, 179, 179, 179, 120, 120, 120, 120, 120, 120, 120, 120, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 152, 152, 152, 199, 199, 199, 199, 152, 152, 152, 152, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 199, 199, 152, 152, 152, 152, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 199, 152, 152, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 152, 152, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 150, 0, 150, 150, 143, 143, 143, 0, 143, 143, 143, 0, 143, 143, 0, 150, 150, 0, 150, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 143, 0, 143, 0, 143, 143, 0, 143, 0, 150, 150, 150, 150, 0, 0, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 0, 143, 0, 0, 143, 143, 143, 0, 143, 0, 150, 150, 150, 0, 0, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 150, 0, 150, 150, 150, 143, 0, 143, 0, 143, 143, 0, 0, 143, 0, 150, 150, 0, 150, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 150, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 199, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 199, 199, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 120, 199, 199, 199, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 120, 120, 199, 199, 199, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 120, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 120, 120, 120, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 120, 120, 120, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 120, 120, 120, 120, 120, 0, 0, 0, 0, 0, 0, },
		};
		for (int i = 0; i < 32; i++) {
			for (int j = 0; j < 32; j++) {
				if ((poisonGlassMatrixR[i][j] != 0) && (poisonGlassMatrixG[i][j] != 0) && (poisonGlassMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(poisonGlassMatrixR[i][j], poisonGlassMatrixG[i][j], poisonGlassMatrixB[i][j]));
				}
			}
		}
	}
	void poisonGlassHide(HDC hdc, int x, int y) {
		int poisonGlassMatrixR[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 215, 215, 214, 214, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 82, 111, 0, 0, 0, 0, 0, 0, 0, 214, 214, 215, 215, 0, 0, 0, 0, 0, 0, 0, 82, 111, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 107, 107, 111, 82, 82, 0, 0, 0, 111, 111, 166, 166, 166, 166, 111, 111, 0, 0, 0, 0, 107, 107, 111, 82, 82, 0, 0, 0, },
			{0, 0, 0, 82, 82, 111, 107, 107, 0, 0, 0, 0, 111, 111, 166, 166, 166, 166, 111, 111, 0, 0, 0, 82, 82, 111, 107, 107, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 111, 82, 0, 0, 0, 0, 0, 0, 0, 111, 107, 82, 82, 0, 0, 0, 0, 0, 0, 0, 111, 82, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 0, 111, 107, 82, 82, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 107, 107, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 107, 107, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 107, 107, 107, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 111, 111, 111, 166, 107, 107, 107, 82, 82, 82, 82, 82, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 111, 111, 111, 166, 166, 166, 107, 107, 107, 107, 82, 82, 82, 82, 82, 82, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 111, 111, 111, 166, 166, 166, 166, 166, 107, 107, 107, 107, 82, 82, 82, 82, 82, 82, 82, 82, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 111, 111, 111, 166, 166, 166, 166, 111, 111, 111, 111, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 166, 111, 111, 111, 111, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 111, 111, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 111, 111, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 232, 0, 232, 232, 221, 221, 221, 0, 221, 221, 221, 0, 221, 221, 0, 232, 232, 0, 232, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 221, 0, 221, 0, 221, 221, 0, 221, 0, 232, 232, 232, 232, 0, 0, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 0, 232, 0, 221, 221, 0, 221, 0, 0, 221, 221, 221, 0, 221, 0, 232, 232, 232, 0, 0, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 0, 232, 0, 232, 232, 232, 221, 0, 221, 0, 221, 221, 0, 0, 221, 0, 232, 232, 0, 232, 232, 0, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 232, 232, 232, 232, 232, 232, 232, 232, 221, 221, 221, 221, 221, 221, 221, 221, 232, 232, 232, 232, 232, 232, 232, 232, 0, 0, 0, 0, },
			{0, 0, 0, 0, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 166, 166, 166, 166, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 82, 166, 166, 166, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 82, 82, 166, 166, 166, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 82, 82, 82, 82, 82, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 82, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 82, 82, 82, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 82, 82, 82, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 166, 82, 82, 82, 82, 82, 0, 0, 0, 0, 0, 0, },
		};
		int poisonGlassMatrixG[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 118, 117, 117, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 25, 49, 0, 0, 0, 0, 0, 0, 0, 117, 117, 118, 118, 0, 0, 0, 0, 0, 0, 0, 25, 49, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 49, 25, 25, 0, 0, 0, 49, 49, 115, 115, 115, 115, 49, 49, 0, 0, 0, 0, 0, 0, 49, 25, 25, 0, 0, 0, },
			{0, 0, 0, 25, 25, 49, 0, 0, 0, 0, 0, 0, 49, 49, 115, 115, 115, 115, 49, 49, 0, 0, 0, 25, 25, 49, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 49, 25, 0, 0, 0, 0, 0, 0, 0, 49, 0, 25, 25, 0, 0, 0, 0, 0, 0, 0, 49, 25, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 49, 0, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 49, 49, 115, 0, 0, 0, 25, 25, 25, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 49, 49, 49, 115, 115, 115, 0, 0, 0, 0, 25, 25, 25, 25, 25, 25, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 49, 49, 49, 115, 115, 115, 115, 115, 0, 0, 0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 49, 49, 49, 115, 115, 115, 115, 49, 49, 49, 49, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 115, 115, 49, 49, 49, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 115, 49, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 49, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 88, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 183, 0, 183, 183, 173, 173, 173, 0, 173, 173, 173, 0, 173, 173, 0, 183, 183, 0, 183, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 173, 0, 173, 0, 173, 173, 0, 173, 0, 183, 183, 183, 183, 0, 0, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 0, 183, 0, 173, 173, 0, 173, 0, 0, 173, 173, 173, 0, 173, 0, 183, 183, 183, 0, 0, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 0, 183, 0, 183, 183, 183, 173, 0, 173, 0, 173, 173, 0, 0, 173, 0, 183, 183, 0, 183, 183, 0, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 183, 183, 183, 183, 183, 183, 183, 183, 173, 173, 173, 173, 173, 173, 173, 173, 183, 183, 183, 183, 183, 183, 183, 183, 0, 0, 0, 0, },
			{0, 0, 0, 0, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 115, 115, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 25, 115, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 25, 25, 115, 115, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 25, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 25, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 25, 25, 25, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 25, 25, 25, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 115, 25, 25, 25, 25, 25, 0, 0, 0, 0, 0, 0, },
		};
		int poisonGlassMatrixB[32][32] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 67, 67, 66, 66, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 120, 152, 0, 0, 0, 0, 0, 0, 0, 66, 66, 67, 67, 0, 0, 0, 0, 0, 0, 0, 120, 152, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 179, 179, 152, 120, 120, 0, 0, 0, 152, 152, 199, 199, 199, 199, 152, 152, 0, 0, 0, 0, 179, 179, 152, 120, 120, 0, 0, 0, },
			{0, 0, 0, 120, 120, 152, 179, 179, 0, 0, 0, 0, 152, 152, 199, 199, 199, 199, 152, 152, 0, 0, 0, 120, 120, 152, 179, 179, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 152, 120, 0, 0, 0, 0, 0, 0, 0, 152, 179, 120, 120, 0, 0, 0, 0, 0, 0, 0, 152, 120, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, 0, 0, 152, 179, 120, 120, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 179, 179, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 179, 179, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 179, 179, 179, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 152, 152, 152, 199, 179, 179, 179, 120, 120, 120, 120, 120, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 152, 152, 152, 199, 199, 199, 179, 179, 179, 179, 120, 120, 120, 120, 120, 120, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 152, 152, 152, 199, 199, 199, 199, 199, 179, 179, 179, 179, 120, 120, 120, 120, 120, 120, 120, 120, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 152, 152, 152, 199, 199, 199, 199, 152, 152, 152, 152, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 199, 199, 152, 152, 152, 152, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 199, 152, 152, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 152, 152, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 150, 0, 150, 150, 143, 143, 143, 0, 143, 143, 143, 0, 143, 143, 0, 150, 150, 0, 150, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 143, 0, 143, 0, 143, 143, 0, 143, 0, 150, 150, 150, 150, 0, 0, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 0, 150, 0, 143, 143, 0, 143, 0, 0, 143, 143, 143, 0, 143, 0, 150, 150, 150, 0, 0, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 0, 150, 0, 150, 150, 150, 143, 0, 143, 0, 143, 143, 0, 0, 143, 0, 150, 150, 0, 150, 150, 0, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 150, 150, 150, 150, 150, 150, 150, 150, 143, 143, 143, 143, 143, 143, 143, 143, 150, 150, 150, 150, 150, 150, 150, 150, 0, 0, 0, 0, },
			{0, 0, 0, 0, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 114, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 199, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 199, 199, 199, 199, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 120, 199, 199, 199, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 120, 120, 199, 199, 199, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 179, 120, 120, 120, 120, 120, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 120, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 120, 120, 120, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 120, 120, 120, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 199, 120, 120, 120, 120, 120, 0, 0, 0, 0, 0, 0, },
		};
		for (int i = 0; i < 32; i++) {
			for (int j = 0; j < 32; j++) {
				if ((poisonGlassMatrixR[i][j] != 0) && (poisonGlassMatrixG[i][j] != 0) && (poisonGlassMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(13, 12, 12));
				}
			}
		}
	}
	void standardDropShow(HDC hdc, int x, int y) {
		int standardDropMatrixR[16][16] = {
			{0, 0, 0, 0, 47, 47, 47, 47, 47, 47, 47, 47, 0, 0, 0, 0, },
			{0, 0, 0, 47, 84, 84, 84, 84, 84, 84, 84, 84, 47, 0, 0, 0, },
			{0, 0, 47, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 47, 0, 0, },
			{0, 47, 84, 84, 153, 153, 153, 153, 153, 153, 153, 153, 84, 84, 47, 0, },
			{47, 84, 84, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 84, 84, 47, },
			{0, 47, 84, 84, 153, 153, 153, 153, 153, 153, 153, 153, 84, 84, 47, 0, },
			{0, 0, 47, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 47, 0, 0, },
			{0, 0, 0, 47, 84, 84, 84, 84, 84, 84, 84, 84, 47, 0, 0, 0, },
			{0, 0, 0, 0, 47, 47, 47, 47, 47, 47, 47, 47, 0, 0, 0, 0, }

		};
		int standardDropMatrixG[16][16] = {
			{0, 0, 0, 0, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, },
			{0, 0, 0, 54, 109, 109, 109, 109, 109, 109, 109, 109, 54, 0, 0, 0, },
			{0, 0, 54, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 54, 0, 0, },
			{0, 54, 109, 109, 217, 217, 217, 217, 217, 217, 217, 217, 109, 109, 54, 0, },
			{54, 109, 109, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 109, 109, 54, },
			{0, 54, 109, 109, 217, 217, 217, 217, 217, 217, 217, 217, 109, 109, 54, 0, },
			{0, 0, 54, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 54, 0, 0, },
			{0, 0, 0, 54, 109, 109, 109, 109, 109, 109, 109, 109, 54, 0, 0, 0, },
			{0, 0, 0, 0, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, }
		};
		int standardDropMatrixB[16][16] = {
			{0, 0, 0, 0, 153, 153, 153, 153, 153, 153, 153, 153, 0, 0, 0, 0, },
			{0, 0, 0, 153, 142, 142, 142, 142, 142, 142, 142, 142, 153, 0, 0, 0, },
			{0, 0, 153, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 153, 0, 0, },
			{0, 153, 142, 142, 234, 234, 234, 234, 234, 234, 234, 234, 142, 142, 153, 0, },
			{153, 142, 142, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 142, 142, 153, },
			{0, 153, 142, 142, 234, 234, 234, 234, 234, 234, 234, 234, 142, 142, 153, 0, },
			{0, 0, 153, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 153, 0, 0, },
			{0, 0, 0, 153, 142, 142, 142, 142, 142, 142, 142, 142, 153, 0, 0, 0, },
			{0, 0, 0, 0, 153, 153, 153, 153, 153, 153, 153, 153, 0, 0, 0, 0, }
		};
		for (int i = 0; i < 16; i++) {
			for (int j = 0; j < 16; j++) {
				if ((standardDropMatrixR[i][j] != 0) && (standardDropMatrixG[i][j] != 0) && (standardDropMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(standardDropMatrixR[i][j], standardDropMatrixG[i][j], standardDropMatrixB[i][j]));
				}
			}
		}
	}
	void standardDropHide(HDC hdc, int x, int y) {
		int standardDropMatrixR[16][16] = {
			{0, 0, 0, 0, 47, 47, 47, 47, 47, 47, 47, 47, 0, 0, 0, 0, },
			{0, 0, 0, 47, 84, 84, 84, 84, 84, 84, 84, 84, 47, 0, 0, 0, },
			{0, 0, 47, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 47, 0, 0, },
			{0, 47, 84, 84, 153, 153, 153, 153, 153, 153, 153, 153, 84, 84, 47, 0, },
			{47, 84, 84, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 77, 77, 77, 77, 77, 77, 153, 153, 84, 84, 47, },
			{47, 84, 84, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 84, 84, 47, },
			{0, 47, 84, 84, 153, 153, 153, 153, 153, 153, 153, 153, 84, 84, 47, 0, },
			{0, 0, 47, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 47, 0, 0, },
			{0, 0, 0, 47, 84, 84, 84, 84, 84, 84, 84, 84, 47, 0, 0, 0, },
			{0, 0, 0, 0, 47, 47, 47, 47, 47, 47, 47, 47, 0, 0, 0, 0, }

		};
		int standardDropMatrixG[16][16] = {
			{0, 0, 0, 0, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, },
			{0, 0, 0, 54, 109, 109, 109, 109, 109, 109, 109, 109, 54, 0, 0, 0, },
			{0, 0, 54, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 54, 0, 0, },
			{0, 54, 109, 109, 217, 217, 217, 217, 217, 217, 217, 217, 109, 109, 54, 0, },
			{54, 109, 109, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 109, 109, 109, 109, 109, 109, 217, 217, 109, 109, 54, },
			{54, 109, 109, 217, 217, 217, 217, 217, 217, 217, 217, 217, 217, 109, 109, 54, },
			{0, 54, 109, 109, 217, 217, 217, 217, 217, 217, 217, 217, 109, 109, 54, 0, },
			{0, 0, 54, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 54, 0, 0, },
			{0, 0, 0, 54, 109, 109, 109, 109, 109, 109, 109, 109, 54, 0, 0, 0, },
			{0, 0, 0, 0, 54, 54, 54, 54, 54, 54, 54, 54, 0, 0, 0, 0, }
		};
		int standardDropMatrixB[16][16] = {
			{0, 0, 0, 0, 153, 153, 153, 153, 153, 153, 153, 153, 0, 0, 0, 0, },
			{0, 0, 0, 153, 142, 142, 142, 142, 142, 142, 142, 142, 153, 0, 0, 0, },
			{0, 0, 153, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 153, 0, 0, },
			{0, 153, 142, 142, 234, 234, 234, 234, 234, 234, 234, 234, 142, 142, 153, 0, },
			{153, 142, 142, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 243, 243, 243, 243, 243, 243, 234, 234, 142, 142, 153, },
			{153, 142, 142, 234, 234, 234, 234, 234, 234, 234, 234, 234, 234, 142, 142, 153, },
			{0, 153, 142, 142, 234, 234, 234, 234, 234, 234, 234, 234, 142, 142, 153, 0, },
			{0, 0, 153, 142, 142, 142, 142, 142, 142, 142, 142, 142, 142, 153, 0, 0, },
			{0, 0, 0, 153, 142, 142, 142, 142, 142, 142, 142, 142, 153, 0, 0, 0, },
			{0, 0, 0, 0, 153, 153, 153, 153, 153, 153, 153, 153, 0, 0, 0, 0, }
		};
		for (int i = 0; i < 16; i++) {
			for (int j = 0; j < 16; j++) {
				if ((standardDropMatrixR[i][j] != 0) && (standardDropMatrixG[i][j] != 0) && (standardDropMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(12, 13, 13));
				}
			}
		}
	}
	void magicDropShow(HDC hdc, int x, int y) {
		int magicDropMatrixR[16][16] = {
			{0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, },
			{0, 0, 0, 255, 229, 229, 229, 229, 229, 229, 229, 229, 255, 0, 0, 0, },
			{0, 0, 255, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 255, 0, 0, },
			{0, 255, 229, 229, 245, 245, 245, 245, 245, 245, 245, 245, 229, 229, 255, 0, },
			{255, 229, 229, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 229, 229, 255, },
			{0, 255, 229, 229, 245, 245, 245, 245, 245, 245, 245, 245, 229, 229, 255, 0, },
			{0, 0, 255, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 255, 0, 0, },
			{0, 0, 0, 255, 229, 229, 229, 229, 229, 229, 229, 229, 255, 0, 0, 0, },
			{0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, }

		};
		int magicDropMatrixG[16][16] = {
			{0, 0, 0, 0, 126, 126, 126, 126, 126, 126, 126, 126, 0, 0, 0, 0, },
			{0, 0, 0, 126, 170, 170, 170, 170, 170, 170, 170, 170, 126, 0, 0, 0, },
			{0, 0, 126, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 126, 0, 0, },
			{0, 126, 170, 170, 228, 228, 228, 228, 228, 228, 228, 228, 170, 170, 126, 0, },
			{126, 170, 170, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 170, 170, 126, },
			{0, 126, 170, 170, 228, 228, 228, 228, 228, 228, 228, 228, 170, 170, 126, 0, },
			{0, 0, 126, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 126, 0, 0, },
			{0, 0, 0, 126, 170, 170, 170, 170, 170, 170, 170, 170, 126, 0, 0, 0, },
			{0, 0, 0, 0, 126, 126, 126, 126, 126, 126, 126, 126, 0, 0, 0, 0, }
		};
		int magicDropMatrixB[16][16] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 122, 122, 122, 122, 122, 122, 122, 122, 0, 0, 0, 0, },
			{0, 0, 0, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 0, 0, 0, },
			{0, 0, 122, 122, 156, 156, 156, 156, 156, 156, 156, 156, 122, 122, 0, 0, },
			{0, 122, 122, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 122, 122, 0, },
			{0, 0, 122, 122, 156, 156, 156, 156, 156, 156, 156, 156, 122, 122, 0, 0, },
			{0, 0, 0, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 0, 0, 0, },
			{0, 0, 0, 0, 122, 122, 122, 122, 122, 122, 122, 122, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }
		};
		for (int i = 0; i < 16; i++) {
			for (int j = 0; j < 16; j++) {
				if ((magicDropMatrixR[i][j] != 0) && (magicDropMatrixG[i][j] != 0) && (magicDropMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(magicDropMatrixR[i][j], magicDropMatrixG[i][j], magicDropMatrixB[i][j]));
				}
			}
		}
	}
	void magicDropHide(HDC hdc, int x, int y) {
		int magicDropMatrixR[16][16] = {
			{0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, },
			{0, 0, 0, 255, 229, 229, 229, 229, 229, 229, 229, 229, 255, 0, 0, 0, },
			{0, 0, 255, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 255, 0, 0, },
			{0, 255, 229, 229, 245, 245, 245, 245, 245, 245, 245, 245, 229, 229, 255, 0, },
			{255, 229, 229, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 255, 255, 255, 255, 255, 255, 245, 245, 229, 229, 255, },
			{255, 229, 229, 245, 245, 245, 245, 245, 245, 245, 245, 245, 245, 229, 229, 255, },
			{0, 255, 229, 229, 245, 245, 245, 245, 245, 245, 245, 245, 229, 229, 255, 0, },
			{0, 0, 255, 229, 229, 229, 229, 229, 229, 229, 229, 229, 229, 255, 0, 0, },
			{0, 0, 0, 255, 229, 229, 229, 229, 229, 229, 229, 229, 255, 0, 0, 0, },
			{0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, }

		};
		int magicDropMatrixG[16][16] = {
			{0, 0, 0, 0, 126, 126, 126, 126, 126, 126, 126, 126, 0, 0, 0, 0, },
			{0, 0, 0, 126, 170, 170, 170, 170, 170, 170, 170, 170, 126, 0, 0, 0, },
			{0, 0, 126, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 126, 0, 0, },
			{0, 126, 170, 170, 228, 228, 228, 228, 228, 228, 228, 228, 170, 170, 126, 0, },
			{126, 170, 170, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 194, 194, 194, 194, 194, 194, 228, 228, 170, 170, 126, },
			{126, 170, 170, 228, 228, 228, 228, 228, 228, 228, 228, 228, 228, 170, 170, 126, },
			{0, 126, 170, 170, 228, 228, 228, 228, 228, 228, 228, 228, 170, 170, 126, 0, },
			{0, 0, 126, 170, 170, 170, 170, 170, 170, 170, 170, 170, 170, 126, 0, 0, },
			{0, 0, 0, 126, 170, 170, 170, 170, 170, 170, 170, 170, 126, 0, 0, 0, },
			{0, 0, 0, 0, 126, 126, 126, 126, 126, 126, 126, 126, 0, 0, 0, 0, }
		};
		int magicDropMatrixB[16][16] = {
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
			{0, 0, 0, 0, 122, 122, 122, 122, 122, 122, 122, 122, 0, 0, 0, 0, },
			{0, 0, 0, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 0, 0, 0, },
			{0, 0, 122, 122, 156, 156, 156, 156, 156, 156, 156, 156, 122, 122, 0, 0, },
			{0, 122, 122, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 14, 14, 14, 14, 14, 14, 156, 156, 122, 122, 0, },
			{0, 122, 122, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 122, 122, 0, },
			{0, 0, 122, 122, 156, 156, 156, 156, 156, 156, 156, 156, 122, 122, 0, 0, },
			{0, 0, 0, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 0, 0, 0, },
			{0, 0, 0, 0, 122, 122, 122, 122, 122, 122, 122, 122, 0, 0, 0, 0, },
			{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }
		};
		for (int i = 0; i < 16; i++) {
			for (int j = 0; j < 16; j++) {
				if ((magicDropMatrixR[i][j] != 0) && (magicDropMatrixG[i][j] != 0) && (magicDropMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(12, 13, 13));
				}
			}
		}
	}
	void poisonDropShow(HDC hdc, int x, int y) {
		int poisonDropMatrixR[16][16] = {
			{0, 0, 0, 0, 111, 111, 111, 111, 111, 111, 111, 111, 0, 0, 0, 0, },
			{0, 0, 0, 111, 181, 181, 181, 181, 181, 181, 181, 181, 111, 0, 0, 0, },
			{0, 0, 111, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 111, 0, 0, },
			{0, 111, 181, 181, 165, 165, 165, 165, 165, 165, 165, 165, 181, 181, 111, 0, },
			{111, 181, 181, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 181, 181, 111, },
			{0, 111, 181, 181, 165, 165, 165, 165, 165, 165, 165, 165, 181, 181, 111, 0, },
			{0, 0, 111, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 111, 0, 0, },
			{0, 0, 0, 111, 181, 181, 181, 181, 181, 181, 181, 181, 111, 0, 0, 0, },
			{0, 0, 0, 0, 111, 111, 111, 111, 111, 111, 111, 111, 0, 0, 0, 0, }
		};
		int poisonDropMatrixG[16][16] = {
			{0, 0, 0, 0, 49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, },
			{0, 0, 0, 49, 165, 165, 165, 165, 165, 165, 165, 165, 49, 0, 0, 0, },
			{0, 0, 49, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 49, 0, 0, },
			{0, 49, 165, 165, 106, 106, 106, 106, 106, 106, 106, 106, 165, 165, 49, 0, },
			{49, 165, 165, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 165, 165, 49, },
			{0, 49, 165, 165, 106, 106, 106, 106, 106, 106, 106, 106, 165, 165, 49, 0, },
			{0, 0, 49, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 49, 0, 0, },
			{0, 0, 0, 49, 165, 165, 165, 165, 165, 165, 165, 165, 49, 0, 0, 0, },
			{0, 0, 0, 0, 49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, }

		};
		int poisonDropMatrixB[16][16] = {
			{0, 0, 0, 0, 152, 152, 152, 152, 152, 152, 152, 152, 0, 0, 0, 0, },
			{0, 0, 0, 152, 213, 213, 213, 213, 213, 213, 213, 213, 152, 0, 0, 0, },
			{0, 0, 152, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 152, 0, 0, },
			{0, 152, 213, 213, 204, 204, 204, 204, 204, 204, 204, 204, 213, 213, 152, 0, },
			{152, 213, 213, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 213, 213, 152, },
			{0, 152, 213, 213, 204, 204, 204, 204, 204, 204, 204, 204, 213, 213, 152, 0, },
			{0, 0, 152, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 152, 0, 0, },
			{0, 0, 0, 152, 213, 213, 213, 213, 213, 213, 213, 213, 152, 0, 0, 0, },
			{0, 0, 0, 0, 152, 152, 152, 152, 152, 152, 152, 152, 0, 0, 0, 0, }

		};
		for (int i = 0; i < 16; i++) {
			for (int j = 0; j < 16; j++) {
				if ((poisonDropMatrixR[i][j] != 0) && (poisonDropMatrixG[i][j] != 0) && (poisonDropMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(poisonDropMatrixR[i][j], poisonDropMatrixG[i][j], poisonDropMatrixB[i][j]));
				}
			}
		}
	}
	void poisonDropHide(HDC hdc, int x, int y) {
		int poisonDropMatrixR[16][16] = {
			{0, 0, 0, 0, 111, 111, 111, 111, 111, 111, 111, 111, 0, 0, 0, 0, },
			{0, 0, 0, 111, 181, 181, 181, 181, 181, 181, 181, 181, 111, 0, 0, 0, },
			{0, 0, 111, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 111, 0, 0, },
			{0, 111, 181, 181, 165, 165, 165, 165, 165, 165, 165, 165, 181, 181, 111, 0, },
			{111, 181, 181, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 107, 107, 107, 107, 107, 107, 165, 165, 181, 181, 111, },
			{111, 181, 181, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 181, 181, 111, },
			{0, 111, 181, 181, 165, 165, 165, 165, 165, 165, 165, 165, 181, 181, 111, 0, },
			{0, 0, 111, 181, 181, 181, 181, 181, 181, 181, 181, 181, 181, 111, 0, 0, },
			{0, 0, 0, 111, 181, 181, 181, 181, 181, 181, 181, 181, 111, 0, 0, 0, },
			{0, 0, 0, 0, 111, 111, 111, 111, 111, 111, 111, 111, 0, 0, 0, 0, }
		};
		int poisonDropMatrixG[16][16] = {
			{0, 0, 0, 0, 49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, },
			{0, 0, 0, 49, 165, 165, 165, 165, 165, 165, 165, 165, 49, 0, 0, 0, },
			{0, 0, 49, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 49, 0, 0, },
			{0, 49, 165, 165, 106, 106, 106, 106, 106, 106, 106, 106, 165, 165, 49, 0, },
			{49, 165, 165, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 0, 0, 0, 0, 0, 0, 106, 106, 165, 165, 49, },
			{49, 165, 165, 106, 106, 106, 106, 106, 106, 106, 106, 106, 106, 165, 165, 49, },
			{0, 49, 165, 165, 106, 106, 106, 106, 106, 106, 106, 106, 165, 165, 49, 0, },
			{0, 0, 49, 165, 165, 165, 165, 165, 165, 165, 165, 165, 165, 49, 0, 0, },
			{0, 0, 0, 49, 165, 165, 165, 165, 165, 165, 165, 165, 49, 0, 0, 0, },
			{0, 0, 0, 0, 49, 49, 49, 49, 49, 49, 49, 49, 0, 0, 0, 0, }

		};
		int poisonDropMatrixB[16][16] = {
			{0, 0, 0, 0, 152, 152, 152, 152, 152, 152, 152, 152, 0, 0, 0, 0, },
			{0, 0, 0, 152, 213, 213, 213, 213, 213, 213, 213, 213, 152, 0, 0, 0, },
			{0, 0, 152, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 152, 0, 0, },
			{0, 152, 213, 213, 204, 204, 204, 204, 204, 204, 204, 204, 213, 213, 152, 0, },
			{152, 213, 213, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 179, 179, 179, 179, 179, 179, 204, 204, 213, 213, 152, },
			{152, 213, 213, 204, 204, 204, 204, 204, 204, 204, 204, 204, 204, 213, 213, 152, },
			{0, 152, 213, 213, 204, 204, 204, 204, 204, 204, 204, 204, 213, 213, 152, 0, },
			{0, 0, 152, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 152, 0, 0, },
			{0, 0, 0, 152, 213, 213, 213, 213, 213, 213, 213, 213, 152, 0, 0, 0, },
			{0, 0, 0, 0, 152, 152, 152, 152, 152, 152, 152, 152, 0, 0, 0, 0, }

		};
		for (int i = 0; i < 16; i++) {
			for (int j = 0; j < 16; j++) {
				if ((poisonDropMatrixR[i][j] != 0) && (poisonDropMatrixG[i][j] != 0) && (poisonDropMatrixB[i][j] != 0)) {
					SetPixel(hdc, x + j, y + i, RGB(13, 12, 12));
				}
			}
		}
	}
}